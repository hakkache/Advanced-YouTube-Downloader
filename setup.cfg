[metadata]
name = advanced-youtube-downloader
version = 3.0.0
author = hakkache
author_email = your-email@example.com
description = A powerful, user-friendly web application for downloading YouTube videos, playlists, and managing your media collection
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/hakkache/Advanced-YouTube-Downloader
project_urls =
    Bug Reports = https://github.com/hakkache/Advanced-YouTube-Downloader/issues
    Source = https://github.com/hakkache/Advanced-YouTube-Downloader
    Documentation = https://github.com/hakkache/Advanced-YouTube-Downloader/tree/main/docs
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: End Users/Desktop
    Topic :: Multimedia :: Video
    Topic :: Internet :: WWW/HTTP :: Dynamic Content
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Operating System :: OS Independent

[options]
packages = find:
python_requires = >=3.8
install_requires =
    streamlit>=1.28.0
    yt-dlp>=2023.7.6
    ffmpeg-python>=0.2.0
    schedule>=1.2.0
    streamlit-calendar>=0.7.0
    streamlit-datetime-picker>=0.0.2

[options.packages.find]
where = src
exclude =
    tests*
    venv*
    __pycache__*

[options.extras_require]
dev =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    black>=22.0.0
    flake8>=5.0.0
    bandit[toml]>=1.7.0
    safety>=2.0.0

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    --verbose
    --tb=short
    --strict-markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests

[coverage:run]
source = .
omit = 
    venv/*
    tests/*
    setup.py
    scripts/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[flake8]
max-line-length = 100
extend-ignore = E203, W503, E501
exclude = 
    .git,
    __pycache__,
    venv,
    .venv,
    downloads,
    test_downloads,
    .pytest_cache
per-file-ignores =
    __init__.py:F401

[bandit]
exclude_dirs = ["tests", "venv", "downloads", "test_downloads"]
skips = ["B101", "B601"]